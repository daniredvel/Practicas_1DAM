SELECT USUARIO
FROM USUARIOS
WHERE ID_USU IN (
    SELECT ID_AMIGO
FROM AMIGOS
JOIN USUARIOS USING (ID_USU)
WHERE UPPER(USUARIO) = 'MIGUEL'
    );

SELECT u.USUARIO
FROM USUARIOS v
JOIN AMIGOS a USING (ID_USU)
JOIN USUARIOS u ON (u.ID_USU=a.ID_AMIGO)
WHERE UPPER(v.USUARIO) = 'MIGUEL';


--EJERCICIO1

CREATE VIEW V_SINAMIGOS AS
SELECT ID_USU
FROM USUARIOS u
WHERE ID_USU NOT IN (
    SELECT a.ID_AMIGO
    FROM AMIGOS a
    );

DELETE FROM USUARIOS WHERE ID_USU IN (SELECT ID_USU FROM V_SINAMIGOS);

--EJERCICIO2
ROLLBACK;

--EJERCICIO3

CREATE VIEW V_CONTRASENAS_IGUALES (CONTRA, NOMBRE_1, NOMBRE_2) AS
SELECT U.CONTRA, U.NOMBRE, V.NOMBRE
FROM USUARIOS u
CROSS JOIN USUARIOS v
WHERE U.CONTRA = V.CONTRA AND U.NOMBRE != V.NOMBRE;

UPDATE USUARIOS SET CONTRA=dbms_random.string('P',16) WHERE EXISTS (SELECT CONTRA FROM V_CONTRASENAS_IGUALES );

--EJERCICIO4
ROLLBACK;

--EJERCICIO5

CREATE OR REPLACE VIEW V_POPULAR AS
SELECT ID_USU, NOMBRE, COUNT(*) AMIGOS
FROM USUARIOS u
JOIN AMIGOS a USING (ID_USU)
GROUP BY ID_USU, NOMBRE
HAVING COUNT(*)>=4;

ALTER TABLE USUARIOS
ADD POPULAR VARCHAR2(1) DEFAULT 'N'
    ADD CONSTRAINT usuarios_check
        CHECK ( POPULAR='S' OR POPULAR='s' OR POPULAR='N' OR POPULAR='n');

UPDATE USUARIOS
SET POPULAR='S'
WHERE ID_USU IN (SELECT ID_USU FROM V_POPULAR);

--EJERCICIO6

CREATE OR REPLACE VIEW MalasContraseñas AS
SELECT USUARIO, NOMBRE, CONTRA
FROM Usuarios
WHERE
    -- Busca el nombre tal cual en la contraseña
    INSTR(UPPER(CONTRA), UPPER(nombre)) > 0
    OR
    -- Sustituye en la contraseña los simbolos por letras y luego compara
    INSTR(UPPER(NOMBRE), REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(CONTRA, '4', 'A'), '3', 'E'), '1', 'I'), '0', 'O'), 'UV', 'U')) > 0
    OR
    -- Comprueba si la contraseña tiene simbolos de puntuación (punct), números y letras (alnum)
    NOT REGEXP_LIKE(CONTRA, '[[:punct:][:alnum:]]')
    OR
    -- El tamaño de la contraseña debe ser superior a ocho
    LENGTH(CONTRA) <= 8;

--EJERCICIO7
ALTER TABLE USUARIOS
ADD BUENA_CONTRA VARCHAR2(1) DEFAULT 'S'
    ADD CONSTRAINT usuarios_check2
        CHECK ( BUENA_CONTRA='S' OR BUENA_CONTRA='s' OR BUENA_CONTRA='N' OR BUENA_CONTRA='n');

UPDATE USUARIOS
SET BUENA_CONTRA='S'
WHERE USUARIO IN (SELECT USUARIO FROM V_POPULAR);

--EJERCICIO8
COMMIT;

--EJERCICIO9
CREATE OR REPLACE VIEW V_MIGUEL_PAULA AS
SELECT A.ID_USU
FROM AMIGOS a
WHERE ID_USU IN (
        SELECT A.ID_AMIGO
      FROM AMIGOS A
      JOIN USUARIOS U USING (ID_USU)
      WHERE UPPER(NOMBRE) = 'MIGUEL')
UNION
SELECT A.ID_USU
FROM AMIGOS a
WHERE ID_USU IN
      (
      SELECT A.ID_AMIGO
      FROM AMIGOS A
      JOIN USUARIOS U USING (ID_USU)
      WHERE UPPER(NOMBRE) = 'PAULA'
                    );

CREATE OR REPLACE VIEW V_MIGUEL_PAULA_ELENA AS
SELECT ID_USU
FROM V_MIGUEL_PAULA
MINUS
SELECT A.ID_USU
FROM AMIGOS a
WHERE ID_USU IN
      (
      SELECT A.ID_AMIGO
      FROM AMIGOS A
      JOIN USUARIOS U USING (ID_USU)
      WHERE UPPER(NOMBRE) = 'ELENA'
                    );

SELECT NOMBRE FROM USUARIOS WHERE ID_USU IN (SELECT ID_USU FROM V_MIGUEL_PAULA_ELENA);
